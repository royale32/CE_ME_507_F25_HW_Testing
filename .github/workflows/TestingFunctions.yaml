name: ci-python-unittest

on:
  push

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 7
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Disable man-db trigger (make mandb a no-op) â€” idempotent
        run: |
          set -euo pipefail
          if [ ! -f /usr/bin/mandb.distrib ]; then
            sudo dpkg-divert --local --rename --add /usr/bin/mandb
            printf '#!/bin/sh\nexit 0\n' | sudo tee /usr/bin/mandb >/dev/null
            sudo chmod +x /usr/bin/mandb
          fi
#      - name: Install dependencies
#        run: |
#          sudo apt -y update
#          sudo apt-get purge -y man-db || true
#          sudo apt install -y --no-install-recommends \
#              -o Dpkg::Options::="--path-exclude=/usr/share/man/*" \
#              python3-numpy python3-scipy python3-matplotlib
      - name: Install dependencies (stable with apt-get)
        run: | 
          set -euo pipefail 
          export DEBIAN_FRONTEND=noninteractive 
          sudo apt-get update -y 
          sudo apt-get install -y --no-install-recommends \
            -o Dpkg::Options::="--path-exclude=/usr/share/man/*" \
            -o Dpkg::Options::="--path-exclude=/usr/share/doc/*" \
            -o Dpkg::Options::="--path-exclude=/usr/share/locale/*" \
            python3-numpy python3-matplotlib
      - name: Test Univariate B-Splines (HW3) with unittest
        if: ${{ always() }}
        run: |
          python3 HW3_Univariate_Lagrange/Univariate_Lagrange_Basis_Functions_Testing.py
      - name: Test Univariate Spatial Mapping (HW6) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
        run: |
          export PYTHONPATH="$HW3_DIR"
          python3 HW6_MultiDimensionalBasisFunctions/UniDimensionalXMap_Testing.py
      - name: Test MultiDimensional Basis Functions (HW6) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
        run: |
          export PYTHONPATH="$HW3_DIR"
          python3 HW6_MultiDimensionalBasisFunctions/MultiDimensionalBasisFunctions_Testing.py
      - name: Test MultiDimensional Mappings (HW7) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
          HW6_DIR: ${{ github.workspace }}/HW6_MultiDimensionalBasisFunctions
        run: |
          export PYTHONPATH="$HW3_DIR:$HW6_DIR"
          python3 HW7_MultiDimensionalMappings/MultiDimensionalMappings_Testing.py
      - name: Test Lagrange Basis Function Derivatives (HW8) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
          HW6_DIR: ${{ github.workspace }}/HW6_MultiDimensionalBasisFunctions
          HW7_DIR: ${{ github.workspace }}/HW7_MultiDimensionalMappings
        run: |
          export PYTHONPATH="$HW3_DIR:$HW6_DIR:$HW7_DIR"
          python3 HW8_LagrangeBasisFuncDerivative/LagrangeBasisFuncDerivative_Testing.py
      - name: Test MultiDimensional Jacobians (HW9) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
          HW6_DIR: ${{ github.workspace }}/HW6_MultiDimensionalBasisFunctions
          HW7_DIR: ${{ github.workspace }}/HW7_MultiDimensionalMappings
          HW8_DIR: ${{ github.workspace }}/HW8_LagrangeBasisFuncDerivative
        run: |
          export PYTHONPATH="$HW3_DIR:$HW6_DIR:$HW7_DIR:$HW8_DIR"
          python3 HW9_MultiDimensionalJacobians/MultiDimensionalJacobians_Testing.py
      - name: Test Multidimensional Spatial Parametric Gradient (HW10) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
          HW6_DIR: ${{ github.workspace }}/HW6_MultiDimensionalBasisFunctions
          HW7_DIR: ${{ github.workspace }}/HW7_MultiDimensionalMappings
          HW8_DIR: ${{ github.workspace }}/HW8_LagrangeBasisFuncDerivative
          HW9_DIR: ${{ github.workspace }}/HW9_MultiDimensionalJacobians
        run: |
          export PYTHONPATH="$HW3_DIR:$HW6_DIR:$HW7_DIR:$HW8_DIR:$HW9_DIR"
          python3 HW10_MultidimensionalSpatialParametricGradient/MultidimensionalSpatialParametricGradient_Testing.py
      - name: Test One Dimensional FEM Convergence (HW13) with unittest
        if: ${{ always() }}
        env:
          HW3_DIR: ${{ github.workspace }}/HW3_Univariate_Lagrange
          HW6_DIR: ${{ github.workspace }}/HW6_MultiDimensionalBasisFunctions
          HW7_DIR: ${{ github.workspace }}/HW7_MultiDimensionalMappings
          HW8_DIR: ${{ github.workspace }}/HW8_LagrangeBasisFuncDerivative
          HW9_DIR: ${{ github.workspace }}/HW9_MultiDimensionalJacobians
          HW10_DIR: ${{ github.workspace }}/HW10_MultidimensionalSpatialParametricGradient
        run: |
          export PYTHONPATH="$HW3_DIR:$HW6_DIR:$HW7_DIR:$HW8_DIR:$HW9_DIR:$HW10_DIR"
          python3 HW13_Error_Convergence_1D/OneD_FEM_Convergence_Rates_Testing.py
